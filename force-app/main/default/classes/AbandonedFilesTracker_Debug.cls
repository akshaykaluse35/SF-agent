public with sharing class AbandonedFilesTracker_Debug {

    @InvocableMethod(label='Track Abandoned Files (Debug Only)' 
                     description='Finds and logs files not linked to any record for audit or AI health checks')
    public static void findAbandonedFiles() {
        System.debug('==== [AbandonedFilesTracker_Debug] START ====');

        try {
            // Step 1Ô∏è‚É£: Query a limited batch of ContentDocuments (you can expand this via batch later)
            List<ContentDocument> allDocs = [
                SELECT Id, Title, FileType, CreatedDate, CreatedById, LatestPublishedVersionId
                FROM ContentDocument
                ORDER BY CreatedDate DESC
                LIMIT 500
            ];

            if (allDocs.isEmpty()) {
                System.debug('‚ö™ No ContentDocuments found in org.');
                return;
            }

            // Step 2Ô∏è‚É£: Collect IDs
            Set<Id> allDocIds = new Set<Id>();
            for (ContentDocument cd : allDocs) {
                allDocIds.add(cd.Id);
            }

            // Step 3Ô∏è‚É£: Get linked documents (filter using IN as Salesforce requires)
            Set<Id> linkedDocIds = new Set<Id>();
            for (ContentDocumentLink link : [
                SELECT ContentDocumentId
                FROM ContentDocumentLink
                WHERE ContentDocumentId IN :allDocIds
            ]) {
                linkedDocIds.add(link.ContentDocumentId);
            }

            // Step 4Ô∏è‚É£: Identify orphaned (abandoned) ones
            List<ContentDocument> orphanedDocs = new List<ContentDocument>();
            for (ContentDocument cd : allDocs) {
                if (!linkedDocIds.contains(cd.Id)) {
                    orphanedDocs.add(cd);
                }
            }

            // Step 5Ô∏è‚É£: Log Results
            if (orphanedDocs.isEmpty()) {
                System.debug('‚úÖ No abandoned files found in this scan.');
            } else {
                System.debug('‚ö†Ô∏è Found ' + orphanedDocs.size() + ' abandoned files:');
                Integer counter = 1;
                for (ContentDocument cd : orphanedDocs) {
                    System.debug(
                        counter + ') üìÅ ' + cd.Title +
                        ' | Id: ' + cd.Id +
                        ' | Type: ' + cd.FileType +
                        ' | CreatedBy: ' + cd.CreatedById +
                        ' | CreatedDate: ' + cd.CreatedDate
                    );
                    counter++;
                }
            }

        } catch (Exception e) {
            System.debug('‚ùå Error while finding abandoned files: ' + e.getMessage());
        }

        System.debug('==== [AbandonedFilesTracker_Debug] END ====');
    }
}